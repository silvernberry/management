name: Check Quarterly report changes

on:
  pull_request:
    types: [opened, synchronize, reopened, edited, labeled, unlabeled]

jobs:
  check_changes:
    if: contains(github.event.pull_request.labels.*.name, 'Quarterly Reports')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Get changed files in pull request
        id: get_changed_files
        run: |
          changed_files=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
          -X GET ${{ github.api_url }}/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files \
          | jq -r '.[] | select(.filename | contains("quaterly_reports")) | .filename')
          echo "::set-output name=CHANGED_FILES::$changed_files"

      - name: Check for Quarterly Reports changes
        run: |
          if [ -z "${{ steps.get_changed_files.outputs.CHANGED_FILES }}" ]; then
            echo "No changes made to Quarterly Reports folder."
            exit 1
          else
            echo "Changes detected in Quarterly Reports folder."
            current_month=$(date +"%-m")
            current_year=$(date +"%Y")
            while read -r file; do
              filename=$(basename "$file")
              case $current_month in
                3) quarter="Q1" ;;
                6) quarter="Q2" ;;
                9) quarter="Q3" ;;
                12) quarter="Q4" ;;
                *) echo "Invalid month: $current_month"
                   exit 1 ;;
              esac
              expected_filename="$quarter"_"$current_year".md
              if [ "$filename" == "$expected_filename" ]; then
                echo "$filename"
              else
                echo "Invalid filename format: $filename"
                exit 1
              fi
            done <<< "${{ steps.get_changed_files.outputs.CHANGED_FILES }}"
          fi
